name: Deploy to Kubernetes using GitHub Actions

on: [push]
  
jobs:
  deploy:
    runs-on: ubuntu-22.04  # Use supported Ubuntu version
    name: Build and deploy Quizlet app
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Kind
      uses: engineerd/setup-kind@v0.6.0
      with:
        version: "v0.22.0"
        
    - name: Create cluster
      run: kind create cluster --name quizlet-cluster
      
    - name: Build backend image
      run: |
        docker build -f ./backend/Dockerfile -t quizlet-backend:latest ./backend
        kind load docker-image quizlet-backend:latest --name quizlet-cluster
        
    - name: Build frontend image
      run: |
        docker build -f ./frontend/Dockerfile -t quizlet-frontend:latest ./frontend
        kind load docker-image quizlet-frontend:latest --name quizlet-cluster
        
    - name: Verify images
      run: docker images | grep quizlet
        
    - name: Deploy PostgreSQL
      run: kubectl apply -f k8s/postgres-deployment.yaml
      
    - name: Wait for PostgreSQL
      run: |
        kubectl wait --for=condition=ready pod -l app=quizlet-postgres --timeout=120s
        
    - name: Initialize database
      run: |
        sleep 20
        if [ -f "./backend/init_db.sql" ]; then
          echo "Initializing database with init script..."
          kubectl cp ./backend/init_db.sql quizlet-postgres-$(kubectl get pods -l app=quizlet-postgres -o jsonpath='{.items[0].metadata.name}'):/tmp/init_db.sql
          kubectl exec deployment/quizlet-postgres -- psql -U quizuser -d quizdb -f /tmp/init_db.sql
        else
          echo "No init_db.sql found, skipping database initialization"
        fi
        
    - name: Deploy backend
      run: kubectl apply -f k8s/backend-deployment.yaml
      
    - name: Deploy frontend
      run: kubectl apply -f k8s/frontend-deployment.yaml
      
    - name: Wait for deployments
      run: |
        kubectl wait --for=condition=available deployment/quizlet-backend --timeout=120s
        kubectl wait --for=condition=available deployment/quizlet-frontend --timeout=120s
        
    - name: Create ingress for frontend access
      run: |
        cat <<EOF | kubectl apply -f -
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: quizlet-frontend
        spec:
          rules:
          - http:
              paths:
              - path: /
                pathType: Prefix
                backend:
                  service:
                    name: quizlet-frontend
                    port:
                      number: 80
        EOF
        
    - name: Show status
      run: |
        kubectl get all
        kubectl get ingress